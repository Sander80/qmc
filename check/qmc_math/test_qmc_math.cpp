#include "catch.hpp"
#include "qmc.hpp"

#include <limits> // numeric_limits
#include <type_traits> // make_signed
#include <cmath> // pow
#include <vector>

TEST_CASE( "Argsort functionality", "[argsort]")
{
    std::vector<int> empty_int = {};
    std::vector<double> empty_double = {};
    std::vector<size_t> empty_target = {};

    std::vector<int> one_int = {1};
    std::vector<double> one_double = {1.};
    std::vector<size_t> one_target = {0};

    std::vector<int> few_int = {3,1,2,6,-6};
    std::vector<double> few_double = {3.,1.,2.,6.,-6.};
    std::vector<size_t> few_target = {4,1,2,0,3};


    SECTION("Empty vectors")
    {
        REQUIRE( integrators::math::argsort(empty_int) == empty_target );
        REQUIRE( integrators::math::argsort(empty_double) == empty_target );
    };

    SECTION("Single element vectors")
    {
        REQUIRE( integrators::math::argsort(one_int) == one_target );
        REQUIRE( integrators::math::argsort(one_double) == one_target );
    };

    SECTION("Few element vectors")
    {
        REQUIRE( integrators::math::argsort(few_int) == few_target );
        REQUIRE( integrators::math::argsort(few_double) == few_target );
    };

};

TEST_CASE( "Diagnostic Info", "[mul_mod]") {

    using D = double;
    using U = unsigned long long int;

    auto old_cout_precision = std::cout.precision(std::numeric_limits<D>::max_digits10);
    static_assert( std::numeric_limits<U>::is_modulo, "std::numeric_limits<U>::is_modulo = false");
    std::cout << "std::numeric_limits<typename std::make_signed<U>::type>::max() = " << std::numeric_limits<typename std::make_signed<U>::type>::max() << std::endl;
    std::cout << "std::pow(std::numeric_limits<D>::radix,std::numeric_limits<D>::digits-1) = " << std::pow(std::numeric_limits<D>::radix,std::numeric_limits<D>::digits-1) << std::endl;
    std::cout << std::endl;
    std::cout.precision(old_cout_precision);

};

TEST_CASE( "Edge Cases", "[mul_mod]" ) {

    using D = double;
    using U = unsigned long long int;

    U zero = 0ull;
    U a = 4503599627370496ull; // pow(radix,digits-1)
    U b = 4503599627370495ull;

    U c = 3037050499ull;
    U d = 4037000499ull;
    U e = 6854775807ull;

    SECTION( "Zero (R = unsigned long long int)" )
    {
        using R = unsigned long long int;

        U d = 4037000499ull;
        U e = 6854775807ull;

        REQUIRE( integrators::math::mul_mod<R,D>(d,0ull,e) == zero );
        REQUIRE( integrators::math::mul_mod<R,D>(0ull,d,e) == zero );

    };

    SECTION( "Zero (R = double)" )
    {
        using R = double;

        U d = 4037000499ull;
        U e = 6854775807ull;

        REQUIRE( integrators::math::mul_mod<R,D>(d,0ull,e) == Approx(zero) );
        REQUIRE( integrators::math::mul_mod<R,D>(0ull,d,e) == Approx(zero) );

    };

    SECTION( "Maximum U (R = unsigned long long int)" )
    {
        using R = unsigned long long int;

        U a = 4503599627370496ull; // pow(radix,digits-1)
        U b = 4503599627370495ull;

        REQUIRE( integrators::math::mul_mod<R,D>(b,b,a) == 1ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,0ull,a) == 0ull );
        REQUIRE( integrators::math::mul_mod<R,D>(0ull,b,a) == 0ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,1ull,a) == 4503599627370495ull );
        REQUIRE( integrators::math::mul_mod<R,D>(1ll,b,a) == 4503599627370495ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,2ull,a) == 4503599627370494ull );
        REQUIRE( integrators::math::mul_mod<R,D>(2ll,b,a) == 4503599627370494ull );

    };

    SECTION( "Maximum U (R = double)" )
    {
        using R = double;

        U a = 4503599627370496ull; // pow(radix,digits-1)
        U b = 4503599627370495ull;

        REQUIRE( integrators::math::mul_mod<R,D>(b,b,a) == 1ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,0ull,a) == 0ull );
        REQUIRE( integrators::math::mul_mod<R,D>(0ull,b,a) == 0ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,1ull,a) == 4503599627370495ull );
        REQUIRE( integrators::math::mul_mod<R,D>(1ll,b,a) == 4503599627370495ull );
        REQUIRE( integrators::math::mul_mod<R,D>(b,2ull,a) == 4503599627370494ull );
        REQUIRE( integrators::math::mul_mod<R,D>(2ll,b,a) == 4503599627370494ull );

    };

    SECTION( "a*b overflows long long int (R = unsigned long long int)" )
    {
        using R = unsigned long long int;

        U c = 3037050499ull;
        U d = 4037000499ull;
        U e = 6854775807ull;

        REQUIRE( integrators::math::mul_mod<R,D>(c,d,e) == 93292437ull );
        REQUIRE( integrators::math::mul_mod<R,D>(d,c,e) == 93292437ull );

    };

    SECTION( "a*b overflows long long int (R = double)" )
    {
        using R = double;

        U c = 3037050499ull;
        U d = 4037000499ull;
        U e = 6854775807ull;

        REQUIRE( integrators::math::mul_mod<R,D>(c,d,e) == 93292437ull );
        REQUIRE( integrators::math::mul_mod<R,D>(d,c,e) == 93292437ull );

    };

};

TEST_CASE( "Fuzz Large Numbers", "[mul_mod]" )
{
    using D = double;
    using U = unsigned long long int;

    std::vector<U> a = {123099027879071ull,1616806389076340ull,1644887074147882ull,2302863311460688ull,1077005458481562ull,10114283053806ull,367972941036866ull,177581302408261ull,912064459893811ull,866250543457043ull,3595212064940561ull,772646616210961ull,415693884693125ull,1545629998577130ull,1565144311009643ull,27540492723451ull,286549881411500ull,1595879113468042ull,33854962102447ull,1320441141060996ull,1081136094352297ull,1223056743954243ull,85402186793324ull,709563766491ull,472593298448137ull,523997628544984ull,1597621321067800ull,35077314627884ull,1337645695180846ull,200110449103909ull,2470649402994908ull,1517933625099487ull,510099768378983ull,959315906827217ull,2133127384226276ull,553379157921391ull,4007391800560594ull,97283661799670ull,178961306714054ull,140421928489207ull,28988526969200ull,208395648999301ull,1893085354263437ull,221251735706884ull,263330980284342ull,2482963286962772ull,264495385309106ull,1243037353693743ull,897704350704873ull,2726022243010950ull,778045798929851ull,530217568246294ull,568996556359476ull,2687212756868702ull,2572224837801042ull,3285375307214856ull,2938579157759343ull,477747889217169ull,1282768024386702ull,1068288510069159ull,3083118657920076ull,1684269170258537ull,503749814824966ull,37440176180887ull,1165540020071353ull,706896179846965ull,805307204161438ull,740100649071893ull,621749281631537ull,948918194670851ull,1342177547503023ull,7154403233182ull,788107731938451ull,3021975293818579ull,2926570426547541ull,659803826558806ull,2240949333760954ull,108482776490828ull,630875198692051ull,76439599218204ull,970296503261486ull,191232874603013ull,2653497548283381ull,644517232114419ull,2090342552090826ull,355259320351921ull,440887301835398ull,123504730212227ull,520272577087445ull,950149060410489ull,2408978290760260ull,777175718151341ull,1103983714756227ull,605737343993649ull,3187704273379234ull,1410848433580331ull,2420569011972913ull,48996283712830ull,1667439160117215ull};
    std::vector<U> b = {1793496616223063ull,1298339291920635ull,1520925252168030ull,1741245316701842ull,1256669327369248ull,36325565937611ull,2458797264736471ull,3335241757393513ull,157754406408307ull,2390608901605528ull,3285408973394129ull,58628402216054ull,915007777305716ull,2239659384003101ull,1868692232294309ull,225643343868788ull,70066981906843ull,276488292651436ull,21559046604576ull,789081081292762ull,849059932870846ull,1081411670650935ull,165701965670952ull,4936820804719ull,434222133871535ull,203269848035654ull,1088982141608731ull,384678960259093ull,540010731341434ull,137909440313406ull,817016585606992ull,1026952300283820ull,548956401801404ull,2113968734887014ull,1443007049274343ull,784515354706068ull,1096262576444735ull,2000492785889766ull,158388959520005ull,31853594759210ull,60887611755737ull,750292767036274ull,1007207631313459ull,215584077492053ull,889349198454300ull,244065861351958ull,235834162163670ull,209305497214594ull,2035078075567184ull,1843245565840115ull,898057727785727ull,3186810715389485ull,613956099207155ull,2639048048004711ull,706772163293245ull,1161015058829270ull,2384678112474751ull,478398365123902ull,1675742028380675ull,1333027101866569ull,1492014526063588ull,1068964970383858ull,523071842223325ull,930421241940025ull,2093977240632356ull,400548441832016ull,726736222508716ull,480831870143670ull,279431762694182ull,576844787630477ull,1393276871821521ull,334636737243332ull,330140002493265ull,1119302408619381ull,3288208544344166ull,786278756312467ull,2194629200665454ull,35920387389093ull,61456765122227ull,323751007311526ull,1869707409179669ull,48546115820949ull,3690993331467029ull,807865064661950ull,468485174241769ull,193577367990173ull,238068930936677ull,561150799559044ull,1986744816087257ull,5318455729413ull,3242259321641526ull,674952309792783ull,1132370032485028ull,1441514450966757ull,1193719770811039ull,2175646783192914ull,1641413400641122ull,60771872592601ull,776216569293152ull};
    std::vector<U> k = {1911730343705950ull,2358058196074657ull,1790413815107379ull,2914998730251623ull,1833934987956535ull,44362313668917ull,3037831692285112ull,3722624917370035ull,1080814645057611ull,2723101990984759ull,4038150558873368ull,1741148265301457ull,1016752798738243ull,3507926629055102ull,2682696075744302ull,2090997082879925ull,307124839705315ull,2574057167203938ull,37838271062999ull,1343272170732240ull,2070245199438139ull,3498217108251147ull,192705951569841ull,17567741460269ull,610404103145904ull,648916863663239ull,3124113236270014ull,623961136145144ull,1959991756131680ull,219857739796337ull,4080061166924850ull,2602717383494750ull,1120204899242823ull,2470906755006684ull,2622857321390915ull,845890554171484ull,4342410541090687ull,2444223552357434ull,346904493479571ull,417840376011514ull,111229990328627ull,2814474888103975ull,3095001002004982ull,426566161137967ull,1416428222215584ull,3181063397559009ull,505721854542443ull,1489995701233180ull,3036613464889419ull,3854984532300811ull,1518845079093379ull,3287928250651896ull,641682198134771ull,4101446266962901ull,3093494994429484ull,4392043673013753ull,3128794782452901ull,558711648213923ull,2285838868896357ull,2107445360944917ull,4371790301713188ull,1726897475737686ull,564711148160054ull,2575149970316349ull,4111779639363801ull,730640849680537ull,815698220688741ull,1237634807025094ull,1348366791805661ull,1105742945876473ull,1604038716261310ull,378467029675019ull,943777155642115ull,3156502856120523ull,4082749237740799ull,1081928230586501ull,3730352697730073ull,225923057856819ull,751688298359863ull,457517463570102ull,2111496999776311ull,1638898150790995ull,3896010088423145ull,931292733337937ull,2361854773146021ull,464802427526815ull,479894481178936ull,622153772984182ull,2435427475304158ull,1252733706674027ull,4261526786752574ull,3045829926576199ull,1819605870872219ull,2253322470572542ull,3782559464376388ull,2569385086378021ull,3877608252887927ull,230989575811703ull,1738793695489835ull};
    std::vector<U> goal = {1422351483365123ull,23901038896669ull,56558399121717ull,271802817441030ull,1233542805784391ull,19516160332299ull,1293168779713078ull,2289139100847073ull,716108233824595ull,2079227390789053ull,1869864581959425ull,3628348813363ull,439647874234158ull,905612631302636ull,1592144349943627ull,1018555343475138ull,245597891877275ull,674132701956298ull,17081267648692ull,176396321178312ull,1951120125156474ull,1194936506855091ull,151008061503324ull,3662732077859ull,461816158917719ull,449592632960485ull,207148334161314ull,594717244793852ull,1935497375698764ull,113756902993721ull,3059668952944436ull,2153717327558590ull,801175492208449ull,1185635731141290ull,1290404750896548ull,290167568981248ull,4056740772839591ull,315809412847528ull,268365826196173ull,108260881638410ull,92324365193010ull,294202891198874ull,61657640980085ull,111501121770307ull,1182813822085128ull,1560711076719458ull,398397197232839ull,236704526702162ull,261693107664135ull,3181961060312047ull,1231789042986407ull,3135167426194790ull,551252891369162ull,2632972207925800ull,2214862061411954ull,1284043004481786ull,2106093325277031ull,135236483152644ull,312373757877042ull,874323295747164ull,4204918533188028ull,973404244539920ull,271457128926426ull,977101863089104ull,1635236329390478ull,145973810682354ull,378804951766036ull,677440925237408ull,493886714492822ull,633514138696616ull,1080561383528473ull,265935242031874ull,721658711543115ull,1452767395654659ull,4007752646867008ull,307989330682884ull,986025394403933ull,56101262312415ull,549266625370524ull,297919667661228ull,1162516496862489ull,397103107346847ull,3604524426847659ull,787565471578686ull,1550029050226455ull,462986890952363ull,29264236765942ull,433159285765376ull,1783828002578947ull,594951536204332ull,2389766804843694ull,2407647002669347ull,735965926905603ull,1792957234764383ull,1553742025898734ull,2506527984661930ull,966107168529105ull,13627785413497ull,666170867757150ull};

    SECTION( "R = unsigned long long int" )
    {
        using R = unsigned long long int;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == goal[i] );
        }
    };

    SECTION( "R = unsigned long long int" )
    {
        using R = double;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == Approx(goal[i]) );
        }
    };

};

TEST_CASE( "Fuzz Small Numbers", "[mul_mod]" )
{
    using D = double;
    using U = unsigned long long int;

    std::vector<U> a = {29ull,97ull,17ull,7ull,21ull,1ull,0ull,28ull,63ull,35ull,81ull,50ull,23ull,8ull,6ull,45ull,14ull,40ull,3ull,9ull,24ull,24ull,53ull,15ull,10ull,16ull,26ull,22ull,84ull,51ull,5ull,5ull,23ull,4ull,12ull,27ull,0ull,70ull,60ull,61ull,34ull,0ull,68ull,25ull,18ull,0ull,0ull,78ull,23ull,5ull,6ull,14ull,6ull,25ull,45ull,10ull,2ull,0ull,14ull,39ull,0ull,20ull,2ull,1ull,34ull,13ull,6ull,25ull,29ull,6ull,17ull,3ull,53ull,47ull,79ull,4ull,1ull,24ull,2ull,41ull,1ull,2ull,19ull,14ull,33ull,23ull,19ull,5ull,5ull,6ull,46ull,10ull,3ull,52ull,46ull,9ull,19ull,13ull,40ull};
    std::vector<U> b = {11ull,98ull,9ull,28ull,45ull,1ull,0ull,14ull,22ull,9ull,35ull,21ull,57ull,48ull,65ull,23ull,38ull,38ull,25ull,0ull,15ull,19ull,92ull,15ull,15ull,19ull,7ull,10ull,29ull,61ull,3ull,6ull,20ull,0ull,3ull,27ull,7ull,18ull,12ull,26ull,35ull,37ull,18ull,24ull,21ull,8ull,0ull,67ull,17ull,25ull,20ull,52ull,56ull,70ull,15ull,11ull,2ull,0ull,4ull,25ull,13ull,60ull,3ull,4ull,31ull,15ull,40ull,28ull,0ull,2ull,9ull,19ull,62ull,15ull,7ull,7ull,10ull,29ull,3ull,9ull,3ull,20ull,31ull,49ull,1ull,68ull,11ull,17ull,5ull,21ull,9ull,4ull,14ull,65ull,33ull,2ull,27ull,16ull,53ull};
    std::vector<U> k = {44ull,99ull,44ull,43ull,57ull,2ull,1ull,32ull,86ull,54ull,100ull,71ull,98ull,57ull,90ull,86ull,45ull,44ull,61ull,15ull,32ull,44ull,97ull,16ull,20ull,74ull,49ull,34ull,87ull,75ull,6ull,8ull,51ull,8ull,99ull,35ull,8ull,76ull,90ull,100ull,47ull,64ull,92ull,63ull,88ull,20ull,3ull,80ull,64ull,32ull,25ull,73ull,89ull,87ull,54ull,20ull,3ull,1ull,16ull,57ull,19ull,79ull,5ull,47ull,75ull,17ull,64ull,40ull,48ull,10ull,28ull,68ull,99ull,57ull,86ull,20ull,28ull,32ull,9ull,76ull,13ull,54ull,33ull,54ull,36ull,69ull,32ull,89ull,8ull,32ull,51ull,11ull,19ull,69ull,90ull,10ull,31ull,57ull,77ull};
    std::vector<U> goal = {11ull,2ull,21ull,24ull,33ull,1ull,0ull,8ull,10ull,45ull,35ull,56ull,37ull,42ull,30ull,3ull,37ull,24ull,14ull,0ull,8ull,16ull,26ull,1ull,10ull,8ull,35ull,16ull,0ull,36ull,3ull,6ull,1ull,0ull,36ull,29ull,0ull,44ull,0ull,86ull,15ull,0ull,28ull,33ull,26ull,0ull,0ull,26ull,7ull,29ull,20ull,71ull,69ull,10ull,27ull,10ull,1ull,0ull,8ull,6ull,0ull,15ull,1ull,4ull,4ull,8ull,48ull,20ull,0ull,2ull,13ull,57ull,19ull,21ull,37ull,8ull,10ull,24ull,6ull,65ull,3ull,40ull,28ull,38ull,33ull,46ull,17ull,85ull,1ull,30ull,6ull,7ull,4ull,68ull,78ull,8ull,17ull,37ull,41ull};

    SECTION( "R = unsigned long long int" )
    {
        using R = unsigned long long int;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == goal[i] );
        }
    };

    SECTION( "R = unsigned long long int" )
    {
        using R = double;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == Approx(goal[i]) );
        }
    };

};

TEST_CASE( "Fuzz Small a,b and Large k", "[mul_mod]" )
{
    using D = double;
    using U = unsigned long long int;

    std::vector<U> a = {59ull,89ull,62ull,59ull,12ull,35ull,13ull,42ull,52ull,77ull,57ull,81ull,43ull,52ull,58ull,52ull,77ull,41ull,68ull,10ull,85ull,34ull,45ull,3ull,34ull,92ull,75ull,41ull,47ull,87ull,88ull,60ull,37ull,16ull,6ull,96ull,31ull,63ull,7ull,80ull,25ull,26ull,6ull,39ull,34ull,31ull,6ull,56ull,3ull,23ull,51ull,29ull,85ull,13ull,1ull,78ull,69ull,8ull,6ull,97ull,58ull,11ull,74ull,56ull,84ull,71ull,46ull,96ull,19ull,82ull,17ull,54ull,41ull,79ull,10ull,94ull,36ull,22ull,83ull,2ull,33ull,73ull,41ull,45ull,59ull,9ull,71ull,61ull,58ull,45ull,68ull,93ull,25ull,43ull,88ull,85ull,38ull,77ull,49ull};
    std::vector<U> b = {49ull,17ull,58ull,84ull,22ull,2ull,32ull,21ull,72ull,82ull,46ull,18ull,55ull,65ull,79ull,100ull,40ull,5ull,72ull,65ull,3ull,75ull,15ull,83ull,13ull,68ull,43ull,50ull,70ull,20ull,84ull,71ull,96ull,60ull,24ull,77ull,7ull,27ull,12ull,66ull,52ull,91ull,26ull,61ull,37ull,27ull,52ull,71ull,36ull,34ull,83ull,2ull,42ull,12ull,8ull,39ull,2ull,74ull,55ull,92ull,15ull,48ull,4ull,66ull,50ull,82ull,86ull,87ull,55ull,99ull,1ull,50ull,86ull,2ull,3ull,73ull,7ull,29ull,31ull,79ull,72ull,55ull,4ull,96ull,79ull,18ull,8ull,40ull,19ull,61ull,24ull,12ull,34ull,33ull,43ull,48ull,94ull,98ull,73ull};
    std::vector<U> k = {4295066163513194ull,1961763062986576ull,2440241892758439ull,955160907703329ull,1138214613509797ull,1142534429085281ull,972543196516227ull,501102989656641ull,48345752048208ull,131285262263859ull,1362020504119530ull,934255478668335ull,4482118657433724ull,2743977784615771ull,1209852272553577ull,1282028239965554ull,1495514687648108ull,3426797687655798ull,1737492917415957ull,914960542883805ull,378289946258959ull,2929612622614584ull,3006002547307050ull,3610094857802329ull,4430206085682491ull,1608495681684469ull,3273651957897965ull,4214678646312901ull,2080392109728561ull,1991902226764115ull,4438730534091571ull,1129394297802282ull,1309014289983137ull,2409130015869685ull,1154848649967605ull,1122451619735670ull,1594989006981508ull,468819389240043ull,428586821057901ull,3909488512273925ull,225825444089769ull,179989314347943ull,2863940260735331ull,1513146710787112ull,2067275464925507ull,1849086939808265ull,3815354570353085ull,569074080043037ull,1362118658749357ull,4248513794413565ull,4051333274268877ull,1831232384250803ull,2421933310130628ull,3866260636553617ull,672276844625771ull,4284672910229373ull,2873374556624042ull,518573979349345ull,4261795118099960ull,443540399620429ull,2425470579810094ull,2411202142159739ull,3084472394664805ull,2906608994593681ull,576508126964387ull,3860294497399980ull,2644264616533526ull,4308616538969825ull,3364929327885131ull,2764411876162505ull,1039193013368841ull,514653570829636ull,1167696205393861ull,22456824297152ull,3175684965259992ull,769077625068690ull,1430418252003430ull,3549490031518136ull,3126765147722781ull,907052804618782ull,3001021692409109ull,1457852768316032ull,2533267289853048ull,687206864060123ull,386017039956861ull,3764564469645846ull,2736809365423335ull,530140995883533ull,2215547972232669ull,3972555672470047ull,3323155166309514ull,1063188745473715ull,3681907232940906ull,1633477018535994ull,4462388423849113ull,2875835607652574ull,4176668130731186ull,2151828501370512ull,3260248522076161ull};
    std::vector<U> goal = {2891ull,1513ull,3596ull,4956ull,264ull,70ull,416ull,882ull,3744ull,6314ull,2622ull,1458ull,2365ull,3380ull,4582ull,5200ull,3080ull,205ull,4896ull,650ull,255ull,2550ull,675ull,249ull,442ull,6256ull,3225ull,2050ull,3290ull,1740ull,7392ull,4260ull,3552ull,960ull,144ull,7392ull,217ull,1701ull,84ull,5280ull,1300ull,2366ull,156ull,2379ull,1258ull,837ull,312ull,3976ull,108ull,782ull,4233ull,58ull,3570ull,156ull,8ull,3042ull,138ull,592ull,330ull,8924ull,870ull,528ull,296ull,3696ull,4200ull,5822ull,3956ull,8352ull,1045ull,8118ull,17ull,2700ull,3526ull,158ull,30ull,6862ull,252ull,638ull,2573ull,158ull,2376ull,4015ull,164ull,4320ull,4661ull,162ull,568ull,2440ull,1102ull,2745ull,1632ull,1116ull,850ull,1419ull,3784ull,4080ull,3572ull,7546ull,3577ull};

    SECTION( "R = unsigned long long int" )
    {
        using R = unsigned long long int;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == goal[i] );
        }
    };

    SECTION( "R = unsigned long long int" )
    {
        using R = double;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == Approx(goal[i]) );
        }
    };

};

TEST_CASE( "Fuzz Small a and Large b,k", "[mul_mod]" )
{
    using D = double;
    using U = unsigned long long int;

    std::vector<U> a = {583ull,2976ull,1505ull,5262ull,4973ull,7556ull,2976ull,299ull,4543ull,9033ull,9482ull,3534ull,8810ull,5981ull,7254ull,5706ull,1080ull,7451ull,1812ull,8927ull,8461ull,6909ull,5830ull,8373ull,7380ull,1789ull,140ull,9063ull,2496ull,1352ull,1237ull,6257ull,6372ull,5870ull,2143ull,5315ull,6012ull,1669ull,8751ull,2708ull,2319ull,5750ull,964ull,593ull,6830ull,7255ull,3302ull,3093ull,3779ull,4692ull,1078ull,4142ull,2875ull,2874ull,1919ull,3114ull,1513ull,8799ull,1148ull,4620ull,6265ull,9108ull,230ull,1804ull,3069ull,8270ull,504ull,7707ull,6362ull,7631ull,2750ull,5647ull,9900ull,3619ull,3844ull,6967ull,109ull,9265ull,4647ull,7271ull,9752ull,84ull,9453ull,2638ull,2206ull,194ull,741ull,6010ull,8509ull,956ull,4749ull,6905ull,8365ull,4663ull,8219ull,2457ull,6024ull,3758ull,1085ull};
    std::vector<U> b = {1539310976781320ull,2025410551822495ull,401244745041021ull,428107156584049ull,469387085573755ull,302216699716881ull,346199249073018ull,647122590273855ull,1067728152515483ull,64770240602328ull,260723348832358ull,2321984456378682ull,311563412116303ull,123704889874625ull,3156453131774459ull,187701466431089ull,3143360658056169ull,49399116773542ull,51000659663481ull,1277746731923745ull,8123472695099ull,32765582407208ull,305086085044119ull,1266745317035952ull,669561326466777ull,25847743916655ull,2698922006311516ull,503663776748553ull,162414811276049ull,2694333038823846ull,497836510539467ull,4049656883623108ull,139464011497742ull,3748160221266486ull,2160190858306888ull,564228557810711ull,420031763719794ull,286264021412170ull,344949829300377ull,560227948180484ull,15536828081588ull,1215627726939874ull,282755133714443ull,2162047106797758ull,66694089953941ull,125250687558845ull,917201032919757ull,332948407718427ull,1450340789055251ull,440884806216365ull,583593785779738ull,646620131395328ull,3019068986972000ull,980341695567923ull,14843929673293ull,2215093942405417ull,543906494205390ull,104305432076514ull,403226004432162ull,60254146940539ull,87188216652085ull,1571114052829700ull,1449004939744155ull,1420077706648486ull,1317017860116624ull,2297266199039483ull,132105791559737ull,3166173554374371ull,1528215971409514ull,2451878001961627ull,117298119135598ull,20983599564321ull,165830774729554ull,1228325735150941ull,1982986730765046ull,2739126760600580ull,1840018391511971ull,384190704862477ull,2965956499954805ull,1705932596042905ull,1231180370390689ull,381432851846840ull,633423086632368ull,1649229141232947ull,2113778424895256ull,1206918003114905ull,1658824963051420ull,1099519956293146ull,2287436707493115ull,947448753204507ull,261457730328363ull,1578866322347807ull,68536856955484ull,87117200980684ull,707232541351964ull,214310593071425ull,820417664099979ull,2055094870356508ull,1573156034929777ull};
    std::vector<U> k = {2633961124260279ull,4477064569193930ull,839790796777848ull,2018832757517670ull,1600845921285552ull,3593976017799984ull,546630076363954ull,2316823716502591ull,1549975942943927ull,273152505241141ull,1348972913516940ull,2688013038796621ull,4077794770653332ull,561999567533194ull,3654762106460892ull,721462771248922ull,4099483379510729ull,205936544701838ull,1842008977028559ull,1346108832326506ull,3715619374613025ull,431789432539269ull,2284835526823843ull,1325347334951751ull,2095616790022781ull,101206570503370ull,3237304375394121ull,1125663243843204ull,2244195114690437ull,3985250998423283ull,3488364584321865ull,4309241345011018ull,320631489699501ull,4313574138617571ull,2427733165691870ull,648562749383268ull,549926913466421ull,643739799070684ull,3757766130301596ull,3605591802272350ull,21762422369564ull,1272713512052149ull,1239419435118452ull,3404140350479237ull,563178145917760ull,427727479874722ull,3656712092963121ull,1725939261212870ull,3282496949877678ull,2429042140175408ull,839114169824829ull,669615337992666ull,3194167631432882ull,1423857118471384ull,510513409138208ull,2725545764037273ull,920061106653901ull,2800719026828659ull,2015952222265158ull,136828288827257ull,117085618041574ull,3787264926260440ull,3480931288399616ull,1865894790702643ull,3945989101240849ull,3648531779917568ull,174526082313047ull,4479790348356021ull,1821852011351151ull,2491041572261208ull,124717282902575ull,401204016443273ull,395747466432724ull,1632137966275758ull,2365691960433059ull,4113680522815506ull,3083300720569866ull,616594389262536ull,4411403213783821ull,4493291383412669ull,4472813399351278ull,421186671035923ull,1420726094626683ull,3279884509428484ull,2616149256672213ull,1490315519664958ull,3257476376488660ull,1262146794297246ull,3552302269874440ull,3432819490499352ull,2619461250131150ull,2128625554289999ull,3889626490698031ull,2708550506072658ull,820712028202980ull,4051650501551231ull,1208599342573632ull,4330857093229210ull,1887007820391216ull};
    std::vector<U> goal = {1871517215014700ull,1492892088715340ull,63758403463893ull,1701333313063788ull,228623323948799ull,1374611757762996ull,437901371612232ull,1193286022167592ull,814271406291686ull,250069639545943ull,860416065384476ull,2077274434974896ull,517780094936994ull,287515466448821ull,3481183020898098ull,373814922393586ull,457272465778908ull,64213697476936ull,312746458799622ull,864939580786277ull,1851553730198189ull,119746200823116ull,1049835938263916ull,1029165258114594ull,1993815241119443ull,91417717359075ull,2321773337894204ull,140354887943619ull,1432248300739644ull,218855930959130ull,1871596696672439ull,364012165000916ull,194823306294753ull,2472391884660720ull,2029595542956764ull,569194365081001ull,516503759062717ull,119720826464202ull,1169753575417539ull,2748726718363672ull,13095299574152ull,116821713873192ull,1143092609782064ull,2137162550877382ull,472692483866950ull,200570985510947ull,840197727573426ull,1149625390224191ull,2350432493948947ull,1516649477912372ull,617587871760643ull,508847606777242ull,1269882941359606ull,1112652725813150ull,407263540447827ull,2171753636167848ull,395896384167576ull,1948375068275193ull,1250394189400794ull,65419390649442ull,29769161369815ull,1419901760965280ull,2582663743192130ull,1812529949842548ull,1234973027289680ull,486488025747834ull,86881584836541ull,281556068030910ull,1107677537586332ull,67783715242349ull,50934036835550ull,139201888955152ull,164179059645448ull,999153342366445ull,341496545520726ull,132195763108526ull,147457837763549ull,544065727491613ull,1576215429322031ull,2351687608995815ull,1439808191168976ull,30172556404412ull,808675178932542ull,1539615070344402ull,1017229929051170ull,162556016893164ull,1120703684877400ull,776469175724650ull,734807416858775ull,2929482062179116ull,38128767230787ull,1380492292522456ull,1535714300013103ull,2653482768103450ull,461673638287756ull,3898212476382426ull,233296754692248ull,1128325572075634ull,1019228265148781ull};

    SECTION( "R = unsigned long long int" )
    {
        using R = unsigned long long int;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == goal[i] );
        }
    };

    SECTION( "R = unsigned long long int" )
    {
        using R = double;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == Approx(goal[i]) );
        }
    };

};

TEST_CASE( "Fuzz Small b and Large a,k", "[mul_mod]" )
{
    using D = double;
    using U = unsigned long long int;

    std::vector<U> a = {4251140691698791ull,360028510249836ull,1830278510920003ull,1745048591486157ull,1538619017267825ull,1284123260575481ull,2234345222185292ull,777043495820820ull,1768061019773578ull,2877630527518280ull,2053712478091556ull,75335452636105ull,707225886536801ull,105055811673025ull,641221758649336ull,1796081427098850ull,2811336474371082ull,2874613670075786ull,2421808164826164ull,815472667495736ull,3017456454890855ull,1215389978149806ull,904977322556668ull,1458352150583152ull,586554019639899ull,509765552811928ull,2492042057972624ull,1085719195933403ull,2106363700971892ull,1751252027719825ull,3652137937107419ull,2647755647315665ull,2420516078117895ull,1163846906437608ull,1062244011483398ull,2454689120152349ull,196525469672550ull,4060238024137129ull,90469851692124ull,1873388199122515ull,362206983341886ull,1614558605876615ull,575380427958791ull,147448295766839ull,57301115171071ull,736150653336751ull,615895869507771ull,2099684252821341ull,1524865758967225ull,1125925019083056ull,1463334143525522ull,939709301873946ull,1190464419490611ull,111809139726796ull,1976360134419780ull,1882130133816608ull,606724773512873ull,1090675846294802ull,334789202366767ull,521784768253080ull,100856740140750ull,691514630212887ull,3395371377830780ull,675581239636875ull,1153335390090554ull,15227465411669ull,651812442174764ull,93806982869483ull,2326693431735650ull,125655094221840ull,1870540974574582ull,2564130793206655ull,189377862300341ull,2377505164464134ull,1433279654216117ull,1940276503348304ull,1160542829589927ull,71135085149429ull,1250898616167316ull,79371034605869ull,2512197652255865ull,314459779602742ull,194246666904918ull,1498977574368204ull,140918604758232ull,303984899859090ull,863996619591060ull,520694916225456ull,986107008862995ull,246847750899663ull,508060408671918ull,2482057832613990ull,307480834960881ull,1458084642895191ull,555894316704669ull,679200704926743ull,525058521583087ull,731455517904648ull,1998902804631274ull};
    std::vector<U> b = {8727ull,9721ull,9449ull,1624ull,4736ull,666ull,8270ull,4359ull,9254ull,1862ull,6138ull,2300ull,5085ull,5397ull,6770ull,6887ull,4501ull,1409ull,2475ull,3120ull,302ull,8418ull,8974ull,867ull,1221ull,5859ull,3249ull,9277ull,7680ull,359ull,7059ull,9269ull,3955ull,9429ull,2590ull,5341ull,6892ull,6097ull,2082ull,9956ull,1804ull,1785ull,5808ull,113ull,9703ull,6850ull,9711ull,7559ull,8627ull,3040ull,8139ull,2960ull,1927ull,1837ull,4495ull,8892ull,9842ull,639ull,670ull,1651ull,82ull,1162ull,5863ull,1106ull,2680ull,9038ull,9635ull,8646ull,6584ull,3760ull,3937ull,6246ull,4545ull,9556ull,860ull,5580ull,4070ull,5663ull,1016ull,7019ull,6552ull,9251ull,4761ull,1974ull,6384ull,3666ull,4752ull,5275ull,6426ull,178ull,7911ull,1659ull,5200ull,2396ull,6670ull,8102ull,8524ull,5173ull,8488ull};
    std::vector<U> k = {4312784215982773ull,4225592318163404ull,2650302619679533ull,2293921244929865ull,2595467307012567ull,2074689402145289ull,4046226811418213ull,906659049459354ull,2626425530535699ull,3122729855047247ull,2447740959536064ull,332691542132641ull,1095967397739226ull,237046136659955ull,1768707361624326ull,1931056972121232ull,3057612269495514ull,3296311629169173ull,3604251168333091ull,862844990830852ull,3115722038444056ull,1573007143229821ull,1466267925200324ull,1676604093903053ull,1335968154126044ull,2076318795563875ull,2723654606560370ull,1563451561088196ull,4176330399222940ull,3146896910210319ull,3962152717306703ull,3703874481512261ull,4278223854955394ull,2078610130418458ull,1067012060221081ull,2749361418721132ull,1118248780024367ull,4067613161130837ull,162564003085418ull,2654538354568198ull,2052274155881115ull,2601789032060358ull,4283495081192385ull,889062208478018ull,167128270542571ull,4492306011625690ull,1488362220149785ull,2730368923757275ull,2081275533169286ull,2563368125961208ull,1797340453496080ull,2030404723496879ull,4078236911487827ull,273348700397985ull,3312682735557044ull,2483494287565152ull,3051413725817823ull,1697638749427590ull,1456764932700818ull,1945148971505593ull,437511477377385ull,2082188605525366ull,3643014585033437ull,1635000237663574ull,1160760822708964ull,1808700445179235ull,807818594395520ull,161376023150648ull,3795960396264766ull,2502222243527627ull,4372470340853518ull,2682538664205956ull,558675924737802ull,2715237966053104ull,3482330434729023ull,3475318069656365ull,1995807270267794ull,116264461906794ull,1420218721637434ull,246615132980604ull,3274823692351819ull,578910493516667ull,1200509742928489ull,3923988172538110ull,4140155698041890ull,2687708689087098ull,3494579126994230ull,2425555747766167ull,1592052063716425ull,1381856549219576ull,1042698195474782ull,2808788950924818ull,2588064404040062ull,3910517652611044ull,3326025961616970ull,720796493026983ull,944418027760083ull,1028007698363447ull,3915241818637411ull};
    std::vector<U> goal = {1134990571535711ull,1046708699357244ull,1077056274155522ull,966175085135693ull,1422934996143631ull,454057859411278ull,2963366536804282ull,761048552267190ull,1632047277821741ull,2666340833008755ull,2268989874777192ull,271939154068180ull,374601057232579ull,208902845363520ull,663440629908716ull,1192881993288990ull,1425899971803150ull,2459980517038030ull,105515006825567ull,607689617344624ull,1481014151373858ull,314376498311124ull,1074722864144320ull,231827752690822ull,103527368757095ull,969945904233902ull,1943155655635736ull,462024144020999ull,1945587273683940ull,2466992819563694ull,2676119243861003ull,174780468657499ull,2754325421058347ull,929602321166050ull,454898492054002ull,1539346271338633ull,254264373706163ull,3845147682932368ull,109115650088124ull,666431267600192ull,798216378567774ull,1806652998941469ull,683362254597828ull,658537669048483ull,124092680310767ull,2264630312720170ull,725388228128051ull,2609082199234319ull,1355532980362555ull,715609854277560ull,898749289197478ull,1915467079652809ull,2055792102248623ull,108515679237517ull,2436390188476136ull,2116640283284160ull,2819973214034278ull,909978517066578ull,1423730882508736ull,1710806980362974ull,395046098748570ull,1897387180108784ull,1630695599163372ull,1632742663794006ull,993535391422552ull,164598557042562ull,231127523078660ull,140657557543818ull,2249355619188790ull,2045372490924524ull,1079762902805022ull,805109059209810ull,361460058834765ull,1043289652943336ull,3357859166515501ull,1127101703959345ull,1329314977402286ull,97891156082011ull,1237456882127060ull,1706495410075ull,655139820185186ull,42191183714567ull,415879079378068ull,294649709099756ull,1210586301462958ull,1697245601365368ull,3076041205491100ull,936576617979356ull,356425362234370ull,1101346634333158ull,707047643733470ull,49342250826222ull,2064604503862946ull,1478540595215344ull,2622171178837650ull,323683548483564ull,1804419200251ull,751064143259144ull,1944205554351849ull};

    SECTION( "R = unsigned long long int" )
    {
        using R = unsigned long long int;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == goal[i] );
        }
    };

    SECTION( "R = unsigned long long int" )
    {
        using R = double;
        for(size_t i = 0; i < a.size(); i++)
        {
            REQUIRE( integrators::math::mul_mod<R,D>(a[i],b[i],k[i]) == Approx(goal[i]) );
        }
    };

};
